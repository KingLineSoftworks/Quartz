name: Quartz Linux Unit Tests

on:
  push:
    branches:
      - "master"

jobs:
  # ===========================================================================================
  # This is the variant which attempts to build and run tests on a github hosted runner
  #
  # This is not working because the github runners do not have x11 or wayland installed so we
  # cannot actually do any testing there
  # ===========================================================================================
  github-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.QUARTZ_GITHUB_SSH_PRIVATE_KEY }}
          token: ${{ secrets.QUARTZ_PERSONAL_ACCESS_TOKEN }}
          submodules: recursive
      - name: Setup Debug Build Dir
        run: mkdir .debug
      - name: Debug Build CMake
        run: |
          cd .debug
          cmake .. -DCMAKE_BUILD_TYPE=Debug -DQUARTZ_COMPILE_UNIT_TESTS=True
      - name: Debug Build Ninja 
        run: |
          cd .debug
          ninja
      - name: Debug Build CTest
        run: |
          cd .debug
          ctest

  # ===========================================================================================
  # This is the variant which attempts to use ssh to get into jade for building and running
  # tests there
  #
  # This is not working because jade is not configured to accept ssh sessions from outside of
  # the local network
  # ===========================================================================================
  ssh-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate sshpass exists
        run: sshpass -h
      - name: Setup ~/.ssh directory
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
      - name: Populate known hosts file
        run: echo "${{ secrets.JADE_HOST_SIGNATURES }}" >> ~/.ssh/known_hosts
      - name: SSH With Password
        run: sshpass -e ssh -vvv -tt ${{ secrets.JADE_RUNNER_USERNAME }}@${{ secrets.JADE_IP }} "whoami ; pwd"
        env:
          SSHPASS: ${{ secrets.JADE_RUNNER_PASSWORD }}
